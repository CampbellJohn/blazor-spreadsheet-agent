# Blazor Spreadsheet Agent - Project Plan

project:
  name: "Blazor Spreadsheet Agent"
  description: "An application to upload spreadsheets, store them in SQL, have an agent help prepare the data with the required columns for lead delivery, and then send them to Eloqua via API."
  version: "1.0.0"
  targetFramework: "net8.0"

dependencies:
  backend:
    - "Microsoft.EntityFrameworkCore.SqlServer"
    - "Microsoft.EntityFrameworkCore.Tools"
    - "DocumentFormat.OpenXml"  # For Excel file processing
    - "CsvHelper"  # For CSV file processing
    - "OpenAI"  # For OpenAI integration

  frontend:
    - "Blazor"
    - "MudBlazor"  # For UI components
    - "BlazorInputFile"  # For file uploads

database:
  name: "SpreadsheetAgentDb"
  tables:
    - name: "Spreadsheets"
      description: "Stores metadata about uploaded spreadsheets"
      columns:
        - name: "Id"
          type: "Guid"
          isPrimaryKey: true
        - name: "FileName"
          type: "string"
          maxLength: 255
        - name: "UploadDate"
          type: "DateTime"
        - name: "Processed"
          type: "bool"
          defaultValue: false

    - name: "SpreadsheetData"
      description: "Stores the actual data from spreadsheets"
      columns:
        - name: "Id"
          type: "int"
          isPrimaryKey: true
          isIdentity: true
        - name: "SpreadsheetId"
          type: "Guid"
          isForeignKey: true
        - name: "RowData"
          type: "string(MAX)"  # JSON serialized row data

phases:
  - name: "Phase 1: Project Setup & Database"
    tasks:
      - "Set up project structure"
      - "Configure Entity Framework Core"
      - "Create database context and models"
      - "Set up initial migration"
      - "Configure dependency injection"

  - name: "Phase 2: File Upload & Processing"
    tasks:
      - "Create file upload UI component"
      - "Implement file type validation"
      - "Add XLSX parsing"
      - "Add CSV parsing"
      - "Implement data validation"
      - "Store data in database"

  - name: "Phase 3: Data Preparation & Analysis"
    tasks:
      - "Implement data preview functionality"
      - "Create column mapping interface"
      - "Integrate OpenAI for data analysis"
      - "Add data transformation rules"
      - "Implement data validation rules"
      - "Create data cleaning utilities"
      - "Add data enrichment capabilities"

  - name: "Phase 4: Eloqua Integration"
    tasks:
      - "Mock Eloqua API authentication and integration."

  - name: "Phase 5: Deployment & Documentation"
    tasks:
      - "Configure Docker containers"
      - "Deploy application"
      - "Create user documentation"

